"""
Django settings for login_social_auth project.

Generated by 'django-admin startproject' using Django 1.8.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'dq4*nuck(f^+r$kjm4k-fnr_18a!b-k5!3t$1vdty7(mat+2gi'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'social.apps.django_app.default',
    'principal',
    'users',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'login_social_auth.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'login_social_auth.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'

AUTH_USER_MODEL = 'users.User'

AUTHENTICATION_BACKENDS = (
 'social.backends.facebook.FacebookAppOAuth2',
 'social.backends.facebook.FacebookOAuth2',
 #'social.backends.twitter.TwitterOAuth',
 'django.contrib.auth.backends.ModelBackend',
 )
 
#Agrego el namespace a utilizar
#SOCIAL_AUTH_URL_NAMESPACE = 'social'
 
#Indico a que url va ir en caso de login exitoso 
SOCIAL_AUTH_LOGIN_REDIRECT_URL = "/"
 
#URL de error al loguearse en redes sociales
#SOCIAL_AUTH_LOGIN_URL = "/url_de_logueo/"
 
#Seteo el modelo de usuario 
#SOCIAL_AUTH_USER_MODEL = 'users.User'
 
#Para obtener el email del usuario logueado ya que facebook no lo hace automático, si twitter.
SOCIAL_AUTH_FACEBOOK_SCOPE =['email']

#Key y secret de la app facebook
SOCIAL_AUTH_FACEBOOK_KEY = "1457770834535387"
SOCIAL_AUTH_FACEBOOK_SECRET = "4164d26d69a436b1ee80fcb4e182b7e1"

SOCIAL_AUTH_PIPELINE = (
#Obtiene las instancias de social_user y user
'social.pipeline.social_auth.social_details',
'social.pipeline.social_auth.social_uid',
'social.pipeline.social_auth.auth_allowed',
#Recibe según el user.email la instancia del usuario y lo reemplaza con uno que recibió anteriormente
'social.pipeline.social_auth.social_user',
'social.pipeline.social_auth.associate_by_email',
#Intenta crear un username válido 
'social.pipeline.user.get_username',
#Crea un nuevo usuario si todavía no existe
'social.pipeline.user.create_user',
#Trata de asociar las cuentas
'social.pipeline.social_auth.associate_user',
#Recibe y actualiza social_user.extra_data
'social.pipeline.social_auth.load_extra_data',
#Actualiza los campos de la instancia user con la información que obtiene vía backend
#'social.pipeline.user.user_details',
'principal.pipelines.user_details',
'principal.pipelines.get_avatar',
'principal.pipelines.get_gender',
)